package @{sourcePackageName};

import @{beanPackageName}.@{beanName};
import @{helperPackageName}.@{helperName};
import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

public class @{sourceName} extends @{helperName}<@{beanName}> {
	private static final String TABLE = "@{tableName}";
	private static final String[] COLUMNS = new String[]{@foreach{column : columnList}"@{column.name}"@end{', '}};
	public @{beanName}SqliteHelper() {
		super();
	}

	@Override
	public String getTable() {
		return TABLE;
	}

	@Override
	public String[] getColumns() {
		return COLUMNS;
	}

	public static void execCreateSql(SQLiteDatabase db) {
		StringBuilder sql = new StringBuilder();
		sql.append("CREATE TABLE ").append(TABLE).append(" (");
@foreach{column : columnList}
		sql.append(" @{column.name} @{column.type}@if{column.size != ""}(@{column.size})@end{},");
@end{}
		sql.append(" PRIMARY KEY(");
		@foreach{primary : primaryList}
		sql.append("  @{primary.name}");
		@end{'sql.append(","); '}
		sql.append(" )");
		sql.append(");");
		db.execSQL(sql.toString());
	}

	public @{beanName} select(@foreach{primary : primaryList}@{primary.type} @{primary.name}@end{', '}) {
		return select(@foreach{primary : primaryList}@{primary.name}@end{', '}, null, null);
	}
	public @{beanName} select(@foreach{primary : primaryList}@{primary.type} @{primary.name}@end{', '}, String order) {
		return select(@foreach{primary : primaryList}@{primary.name}@end{', '}, order, null);
	}
	public @{beanName} select(@foreach{primary : primaryList}@{primary.type} @{primary.name}@end{', '}, String order, String limit) {
		StringBuilder selection = new StringBuilder();
		@foreach{primary : primaryList}
		selection.append("@{primary.name}=").append("@if{primary.type == "String"}'?'@else{}?@end{}");
		@end{'selection.append(", ");'}
		Cursor c = query(TABLE, COLUMNS, selection.toString(), new String[]{@foreach{primary : primaryList}String.valueOf(@{primary.name})@end{', '}}, null, null, order, limit);
		
		if (c.getCount() > 0) {
			if (c.moveToFirst()) {
				return cursorToBean(c);
			}
		}
		return null;
	}
	
	@Override
	public @{beanName} cursorToBean(Cursor c) {
		@{beanName} bean = new @{beanName}();
@foreach{column : columnList}
		bean.set@{column.fldName}(c.get@{column.fldType}(c.getColumnIndex("@{column.name}")));
@end{}
		return bean;
	}
	
	@Override
	public ContentValues beanToContentValues(@{beanName} bean) {
		ContentValues cv = new ContentValues();
@foreach{column : columnList}
		cv.put("@{column.name}", bean.get@{column.fldName}());
@end{}
		return cv;
	}
}
